<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="39433" started-at="2020-08-10T13:41:24 IST" finished-at="2020-08-10T13:42:03 IST">
    <groups>
    </groups>
    <test name="Motorola" duration-ms="39424" started-at="2020-08-10T13:41:24 IST" finished-at="2020-08-10T13:42:03 IST">
      <class name="framework.SearchTest">
        <test-method status="PASS" signature="TestSetUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:framework.SearchTest@2173f6d9]" name="TestSetUp" is-config="true" duration-ms="37694" started-at="2020-08-10T13:41:24 IST" finished-at="2020-08-10T13:42:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moto]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ZF6223T9M7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSetUp -->
        <test-method status="PASS" signature="sampleFailTestCase(java.lang.String)[pri:0, instance:framework.SearchTest@2173f6d9]" name="sampleFailTestCase" duration-ms="1532" started-at="2020-08-10T13:42:01 IST" finished-at="2020-08-10T13:42:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moto]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleFailTestCase -->
        <test-method status="PASS" signature="samplePassTestCase(java.lang.String)[pri:0, instance:framework.SearchTest@2173f6d9]" name="samplePassTestCase" duration-ms="160" started-at="2020-08-10T13:42:03 IST" finished-at="2020-08-10T13:42:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moto]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- samplePassTestCase -->
        <test-method status="FAIL" signature="afterTestExecution(org.testng.ITestResult)[pri:0, instance:framework.SearchTest@2173f6d9]" name="afterTestExecution" is-config="true" duration-ms="-1597047123474" started-at="2020-08-10T13:42:03 IST" finished-at="1970-01-01T05:30:00 IST">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest> into a @AfterTest annotated afterTestExecution.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @AfterTest annotated afterTestExecution.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:458)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:372)
at org.testng.internal.Parameters.createParameters(Parameters.java:729)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:164)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:275)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:623)
at org.testng.TestRunner.afterRun(TestRunner.java:853)
at org.testng.TestRunner.run(TestRunner.java:594)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestExecution -->
      </class> <!-- framework.SearchTest -->
    </test> <!-- Motorola -->
    <test name="TestGooglePixel" duration-ms="39433" started-at="2020-08-10T13:41:24 IST" finished-at="2020-08-10T13:42:03 IST">
      <class name="framework.SearchTest">
        <test-method status="PASS" signature="TestSetUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:framework.SearchTest@76f2b07d]" name="TestSetUp" is-config="true" duration-ms="36932" started-at="2020-08-10T13:41:24 IST" finished-at="2020-08-10T13:42:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Google Pixel 2XL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7.1.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSetUp -->
        <test-method status="PASS" signature="sampleFailTestCase(java.lang.String)[pri:0, instance:framework.SearchTest@76f2b07d]" name="sampleFailTestCase" duration-ms="118" started-at="2020-08-10T13:42:01 IST" finished-at="2020-08-10T13:42:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Google Pixel 2XL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleFailTestCase -->
        <test-method status="PASS" signature="samplePassTestCase(java.lang.String)[pri:0, instance:framework.SearchTest@76f2b07d]" name="samplePassTestCase" duration-ms="2004" started-at="2020-08-10T13:42:01 IST" finished-at="2020-08-10T13:42:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Google Pixel 2XL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- samplePassTestCase -->
        <test-method status="FAIL" signature="afterTestExecution(org.testng.ITestResult)[pri:0, instance:framework.SearchTest@76f2b07d]" name="afterTestExecution" is-config="true" duration-ms="-1597047123454" started-at="2020-08-10T13:42:03 IST" finished-at="1970-01-01T05:30:00 IST">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest> into a @AfterTest annotated afterTestExecution.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @AfterTest annotated afterTestExecution.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:458)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:372)
at org.testng.internal.Parameters.createParameters(Parameters.java:729)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:164)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:275)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:623)
at org.testng.TestRunner.afterRun(TestRunner.java:853)
at org.testng.TestRunner.run(TestRunner.java:594)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestExecution -->
      </class> <!-- framework.SearchTest -->
    </test> <!-- TestGooglePixel -->
  </suite> <!-- Suite -->
</testng-results>
